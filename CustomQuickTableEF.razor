@page "/quick-tables-ef"
@using Tabler.Docs.Data // Adjust if your ApplicationDbContext is in a different namespace
@using TabBlazor.Components.QuickTables
@inject IDbContextFactory<ApplicationDbContext> Factory
@using Microsoft.EntityFrameworkCore

<style>
    .quick-table-example {
        height: 300px;
    }
</style>

<div class="card">
    <QuickTable Items="marketQuotes" Pagination="@pagination" Class="quick-table-example">
        <PropertyColumn Property="@(mq => mq.QuoteDate)" Title="Date" Sortable="true" />
        <PropertyColumn Property="@(mq => mq.Broker)" Title="Broker" Sortable="true" />
        <PropertyColumn Property="@(mq => mq.CUSIP)" Title="CUSIP" Sortable="true" />
        <PropertyColumn Property="@(mq => mq.Bond)" Title="Bond" Sortable="true" />
        <PropertyColumn Property="@(mq => mq.Size)" Title="Size" Sortable="true" />
        <PropertyColumn Property="@(mq => mq.Actions)" Title="Actions" Sortable="true" />
        <PropertyColumn Property="@(mq => mq.Price)" Title="Price" Sortable="true" />
    </QuickTable>
    <Paginator Value="@pagination" />
</div>

@code {
    private PaginationState pagination = new PaginationState { ItemsPerPage = 15 };
    private List<MarketQuote>? marketQuotes;

    protected override async Task OnInitializedAsync()
    {
        using var dbContext = Factory.CreateDbContext();
        marketQuotes = await dbContext.MarketQuotes.ToListAsync();
    }
}
